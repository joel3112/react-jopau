import { ChangeEvent, ReactNode } from 'react';
import type { ElementHTML } from '@/components/shared';

export type CollapseProps = ElementHTML & {
  /**
   * Defines the children of the component.
   */
  children: ReactNode;
  /**
   * Title of the component.
   */
  title: string | ReactNode;
  /**
   * Defines if the component is expanded or not by default.
   */
  expanded?: boolean;
  /**
   * Subtitle of the component.
   */
  subtitle?: string | ReactNode;
  /**
   * Collapse arrow icon.
   */
  arrowIcon?: ReactNode;
  /**
   * Left content of the component.
   */
  contentLeft?: ReactNode;
  /**
   * Show or hide the divider of the component.
   */
  divider?: boolean;
  /**
   * Defines if the component is shadowed or not.
   */
  shadow?: boolean;
  /**
   * Defines if the component is disabled or not.
   */
  disabled?: boolean;
  /**
   * Defines if the component is bordered or not.
   */
  bordered?: boolean;
  /**
   * Defines if hide the arrow or not.
   */
  hideArrow?: boolean;
  /**
   * Collapse index, the value it's autogenerated if not provided.
   */
  index?: number;
  /**
   * Disable the arrow animation, it won't rotate the arrow when the component is expanded or collapsed.
   */
  disableArrowAnimation?: boolean;
  /**
   * Function to be called when the value is changed.
   */
  onChange?: (e: ChangeEvent, index: number, value: boolean) => void;
} & Partial<typeof defaultProps>;

export const defaultProps = {};
